package ColumnGameV2;

import ColumnBasedGame.Delta;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.layout.AnchorPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;

public class ColumnModel {

	private AnchorPane root = new AnchorPane();

	ColumnControl control = new ColumnControl(root);

	private int currentTeam;
	private int[][] teams;
	private Delta[] deltas;

	private int width;
	private int height;
	private int streak;

	private double margin;
	private double colWidth;
	private double rowHeight;

	public ColumnModel(int width, int height, int streak) {
		// set basic parameters
		this.width = width;
		this.height = height;
		this.streak = streak;
		this.teams = new int[width][height + 1];

		// MATHS!! to discern width and height of single rectangle
		this.colWidth = 1280 / width;
		this.rowHeight = 800 / height;

		// set attributes of game window
		margin = ((1280 % colWidth) / width) + 4;
		double widthSet = (colWidth * width) + ((width - 1) * margin);
		double heightSet = (rowHeight) * height;
		root.setPrefSize(widthSet, heightSet + 2 * rowHeight);
		root.setMaxSize(widthSet, heightSet + 2 * rowHeight);
		root.setMinSize(widthSet, heightSet + 2 * rowHeight);

	}

	public void initialize() {
		// populate the window with rectangles and "buttons"
		Group controlGroup = control.getControlGroup();
		for (int x = 0; x < width; x++) {
			control.generateButtons(width, height, colWidth, rowHeight, margin);
			for (int y = 0; y < height; y++) {
				Rectangle r = new Rectangle(x * (colWidth + margin), 2 * rowHeight + (y * rowHeight), colWidth,
						rowHeight);
				r.setFill(Color.TRANSPARENT);
				if (x % 2 == 0) {
					r.setStroke(Color.BLUE);
				} else {
					r.setStroke(Color.RED);
				}
				r.setMouseTransparent(true);
				root.getChildren().add(r);
			}
		}

		// make a scene!
		Scene columnScene = new Scene(root);
		Stage columnStage = new Stage();
		columnStage.setScene(columnScene);
		columnStage.show();
	}

	public void putPiece(int col, int row) {

	}

	public int getCurrentTeam() {
		return currentTeam;
	}

	public void setCurrentTeam(int currentTeam) {
		this.currentTeam = currentTeam;
	}

	public int getWidth() {
		return width;
	}

	public int getHeight() {
		return height;
	}

	public int getStreak() {
		return streak;
	}

	public double getMargin() {
		return margin;
	}

	public double getColWidth() {
		return colWidth;
	}

	public double getRowHeight() {
		return rowHeight;
	}

}
