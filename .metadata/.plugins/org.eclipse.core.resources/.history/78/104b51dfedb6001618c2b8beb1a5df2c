package Pr_06_package;

import vorgaben.praktikum5.Cell;
import vorgaben.praktikum6.CellAccessDictionary;

public class LinProbing implements CellAccessDictionary {

	private Cell[] dates;
	private int size;

	@Override
	public void initialize(int arg0) {
		size = arg0;
		dates = new Cell[size];
	}

	@Override
	public void insert(String key, String info) {
		int keyHash = reducedHashcode(key);
		int s = keyHash;
		try {
			while (dates[s].getKey() != key && dates[s] != null) {
				s++;
			}
			Cell c = new Cell();
			c.setKey(key);
			c.setInfo(info);
			dates[s] = c;
		} catch (ArrayIndexOutOfBoundsException e) {
			throw new RuntimeException("Datenstruktur voll");
		}

/*		if (dates[keyHash] == null) {
			Cell c = new Cell();
			c.setKey(key);
			c.setInfo(info);
			dates[keyHash] = c;
		} else if (dates[keyHash].getKey() == key) {
			dates[keyHash].setInfo(info);
		} else {
			int s = keyHash;
			s++;
			for (int search = s; s < size; s++) {
				if (dates[search] == null) {
					Cell c = new Cell();
					c.setKey(key);
					c.setInfo(info);
					dates[search] = c;
					return;
				}
			}
			throw new RuntimeException("Datenstruktur voll");
		}*/
	}

	@Override
	public String read(String key) {
		Cell c = dates[reducedHashcode(key)];
		while (c != null) {
			if (c.getKey() == key) {
				return c.getInfo();
			} else {
				c = c.getNext();
			}
		}
		return null;
	}

	@Override
	public Cell[] getCells() {
		return dates;
	}

	private int reducedHashcode(String s) {
		return Math.abs(s.hashCode()) % size;
	}

}
