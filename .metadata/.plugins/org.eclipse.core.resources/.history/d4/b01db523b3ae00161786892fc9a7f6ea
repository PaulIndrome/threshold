package ColumnBasedGame;

import javafx.scene.Group;
import javafx.scene.layout.AnchorPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Rectangle;

public class GamePiece {

	private Group holder;
	private Circle circle;
	private double radius;
	private boolean team;
	
	public GamePiece(GameColumn column, boolean team) {
		this.team = team;
		if (column.getColumnWidth() < column.getRowHeight()) {
			radius = column.getColumnWidth()/2 - 1;
		} else {
			radius = column.getRowHeight()/2 -1;
		}
		if(team){
			this.circle = new Circle(radius, Color.GOLD);
		} else {
			this.circle = new Circle(radius, Color.BLUEVIOLET);
		}
		circle.setCenterX(column.getX()+(column.getColumnWidth()/2));
		circle.setCenterY(50);
		
		column.pushPiece(this);
		
		new Thread(new Runnable() {
			
			@Override
			public void run() {
				int maxDepth = column.getRowHeight()*column.getFallDepth();
				double current = 50;
				while(circle.getCenterY()<maxDepth){
					current+=(column.getRowHeight()/2);
					circle.setCenterY(current+column.getRowHeight());
					try {
						Thread.sleep(60);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
			}
		}).start();;
		
	}
	
	public Circle getCircle(){
		return circle;
	}
	
}
