package Pr_05_package;

import vorgaben.praktikum5.Cell;
import vorgaben.praktikum5.CellAccessDictionary;

public class SepChaining implements CellAccessDictionary {

	private int size;
	private Cell[] dates;

	@Override
	public boolean delete(String key) {
		Cell c1 = dates[reducedHashcode(key)];
		while(c1 != null){
			if (c1.getKey() == key){
				c1 = c1.getNext();
				return true;
			} else if (c1.getNext().getKey() == key){
				c1.setNext(c1.getNext().getNext());
				return true;
			} else {
				c1 = c1.getNext();
			}
		}
		return false;
	}

	@Override
	public void initialize(int size) {
		this.size = size;
		dates = new Cell[size];
	}

	@Override
	public void insert(String key, String info) {
		int keyHash = reducedHashcode(key);
		Cell c = dates[keyHash];
		if(dates[keyHash] == null){
			c.setKey(key);
			c.setInfo(info);
			dates[keyHash] = c;
		} else {
			while (c.getKey() != key && c.getNext() != null){
				c = c.getNext();
			}
		}
		
	}

	@Override
	public String read(String key) {
		Cell c = dates[reducedHashcode(key)];
		while(c != null){
			if(c.getKey() == key){
				return c.getInfo();
			} else {
				c = c.getNext();
			}
		}
		return null;
	}

	@Override
	public Cell[] getCells() {
		return dates;
	}

	private int reducedHashcode(String s) {
		return Math.abs(s.hashCode()) % size;
	}
}
